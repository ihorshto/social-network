{"version":3,"file":"static/js/815.1658dfe8.chunk.js","mappings":"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","sources":["webpack://react-simple-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://react-simple-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-simple-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Kd9j9\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n return (\r\n  <div className={s.item}>\r\n   <img src='https://cdn-icons-png.flaticon.com/512/194/194938.png' />\r\n   {props.message}\r\n   <div>\r\n    <span>{props.likesCount} like</span>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__j9Z2G\",\"postsBlock\":\"MyPosts_postsBlock__m7w+C\",\"postsBlockContent\":\"MyPosts_postsBlockContent__i2Zu5\",\"userPhoto\":\"MyPosts_userPhoto__PVdxq\",\"error\":\"MyPosts_error__ztus5\"};","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport { Formik, Form, Field, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport s from './MyPosts.module.css';\r\n\r\nconst MyPosts = (props) => {\r\n\tlet postsElements = props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />);\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\t\t\t<div className={s.postsBlockContent}>\r\n\t\t\t\t<div className={s.userPhoto}>\r\n\t\t\t\t\t{props.isAuth ? <img src={props.userPhoto} /> : \"\"}\r\n\t\t\t\t</div>\r\n\t\t\t\t<MyPostsForm addPost={props.addPost} />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst MyPostsForm = (props) => {\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tnewPostText: \"\"\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\tnewPostText: Yup.string()\r\n\t\t\t\t.required(\"Required\")\r\n\t\t}),\r\n\t\tonSubmit: (values, {resetForm}) => {\r\n\t\t\taddPostText(values);\r\n\t\t\tconsole.log(values);\r\n\t\t\tresetForm(values.newPostText = \"\")\r\n\t\t}\r\n\t});\r\n\r\n\r\n\r\n\tlet addPostText = (values) => {\r\n\t\tprops.addPost(values.newPostText);\r\n\t}\r\n\treturn (\r\n\t\t<Formik>\r\n\t\t\t<Form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field name={'newPostText'} type={\"textarea\"} placeholder={'Enter text'}\r\n\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\tvalue={formik.values.newPostText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tformik.touched.newPostText && formik.errors.newPostText\r\n\t\t\t\t\t? <button type={'submit'} disabled={true}>Send</button>\r\n\t\t\t\t\t: <button type={'submit'} disabled={false}>Send</button>\r\n\t\t\t\t}\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t)\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostCreator, updateNewPostTextCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';        \r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tuserPhoto: state.auth.userPhoto \r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostCreator(newPostText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"content__img\":\"ProfileInfo_content__img__3W7qZ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__vbq9m\",\"descriptionInfo\":\"ProfileInfo_descriptionInfo__CPVVY\",\"fullName\":\"ProfileInfo_fullName__ZO5ts\",\"aboutInfo\":\"ProfileInfo_aboutInfo__+YSZ2\",\"lookingJobDescr\":\"ProfileInfo_lookingJobDescr__4AS8s\",\"descriptionContainer\":\"ProfileInfo_descriptionContainer__Q8axE\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.state)\r\n\r\n\tuseEffect( () => {\r\n\t\tsetStatus(props.status);\r\n\t}, [props.status]);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t} \r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{!editMode &&\r\n\t\t\t\t\t<div className={s.statusSpan} >\r\n\t\t\t\t\t\t<span onClick={activateEditMode}>{props.status || \"------\"}</span>  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{editMode &&\r\n\t\t\t\t\t<div className={s.statusInput} >\r\n\t\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateEditMode} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.descriptionContainer}>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\t<div className={s.descriptionPhoto}>\r\n\t\t\t\t\t<img src={props.profile.photos.large} alt=\"\" />\r\n\t\t\t\t</div> \r\n\t\t\t\t<div className={s.descriptionInfo}>\r\n\t\t\t\t\t<div className={s.fullName}>Name:\r\n\t\t\t\t\t\t<span>{props.profile.fullName}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.aboutInfo}>About me: \r\n\t\t\t\t\t\t<span>{props.profile.aboutMe}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.lookingJobDescr}>Looking  for a job:\r\n\t\t\t\t\t\t<span>{props.profile.lookingForAJobDescription}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import Profile from './Profile';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from '../../hoc/withRouter';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorisedUserId;\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n \r\nlet mapStateToProps = (state) => {\r\n\treturn ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorisedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n})};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n\twithRouter,\r\n\twithAuthRedirect)\r\n\t(ProfileContainer)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n class RedirectComponent extends React.Component {\r\n  render() {\r\n   if (!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n\r\n   return <Component {...this.props} />\r\n  }\r\n }\r\n\r\n let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n"],"names":["props","className","s","src","message","likesCount","MyPostsForm","formik","useFormik","initialValues","newPostText","validationSchema","Yup","required","onSubmit","values","resetForm","addPostText","console","log","addPost","handleSubmit","name","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","disabled","postsElements","posts","map","p","id","isAuth","userPhoto","connect","state","profilePage","auth","dispatch","addPostCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","e","currentTarget","autoFocus","updateStatus","profile","photos","large","alt","fullName","aboutMe","lookingForAJobDescription","Preloader","ProfileContainer","userId","this","match","params","authorisedUserId","getUserProfile","getStatus","React","compose","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}