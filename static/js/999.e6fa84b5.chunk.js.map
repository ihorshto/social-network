{"version":3,"file":"static/js/999.e6fa84b5.chunk.js","mappings":"8MACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAwN,gCCAxN,EAA0B,yBAA1B,EAA+D,2B,SCY/D,EAXgB,SAACA,GAChB,OACC,iBAAKC,UAAWC,EAAhB,WACC,gBAAKC,IAAI,oGACT,gBAAKF,UAAWC,EAAhB,SACKF,EAAMI,c,UCWd,EAdmB,SAACJ,GACnB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACC,gBAAKL,UAAWC,EAAW,IAAMA,EAAjC,UACC,UAAC,KAAD,CAASK,GAAIF,EAAMJ,UAAWC,EAA9B,WACC,gBAAKC,IAAI,8FACRH,EAAMQ,W,mBCmBLC,EAAiB,SAACT,GACtB,IAAMU,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,eAAgB,IAElBC,iBAAkBC,EAAAA,GAAW,CAC3BF,eAAgBE,EAAAA,KACbC,SAAS,cAEdC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBC,EAAcF,GACdG,QAAQC,IAAIJ,GACZC,EAAUD,EAAOL,eAAiB,OAGlCO,EAAgB,SAACF,GACnBlB,EAAMuB,YAAYL,EAAOL,iBAG3B,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMI,SAAUP,EAAOc,aAAvB,WACE,0BACE,SAAC,KAAD,CAAOhB,KAAM,iBAAkBiB,KAAM,WAAYC,YAAa,aAC5DC,SAAUjB,EAAOkB,aACjBC,OAAQnB,EAAOoB,WACfC,MAAOrB,EAAOQ,OAAOL,mBAIvBH,EAAOsB,QAAQnB,gBAAkBH,EAAOuB,OAAOpB,gBAC3C,mBAAQY,KAAM,SAAUS,UAAU,EAAlC,mBACA,mBAAQT,KAAM,SAAUS,UAAU,EAAlC,wBAOd,EA7DgB,SAAClC,GACf,IAAImC,EAAQnC,EAAMoC,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYhC,KAAMgC,EAAEhC,KAAiBF,GAAIkC,EAAElC,IAAZkC,EAAElC,OAC1EmC,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASvC,QAASuC,EAAEvC,SAAcuC,EAAErC,OAInF,OACE,0BACE,iBAAKL,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGmC,KAEH,iBAAKpC,UAAWC,EAAhB,WACE,yBAAMuC,KACN,SAAChC,EAAD,CAAgBc,YAAavB,EAAMuB,uBCF7C,GAAeqB,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAACV,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAGE,SAACU,GACxB,MAAO,CACLvB,YAAa,SAACV,GACZiC,GAASC,EAAAA,EAAAA,GAAmBlC,SAQhCmC,EAAAA,EAFF,CAGGC,I,iJCpBCC,EAA6B,SAACf,GAAD,MAAY,CAC5CgB,OAAQhB,EAAMiB,KAAKD,SAGPH,EAAmB,SAACK,GAAe,IACzCC,EADwC,0IAE7C,WACC,OAAKC,KAAKvD,MAAMmD,QAET,SAACE,GAAD,UAAeE,KAAKvD,SAFI,SAAC,KAAD,CAAUO,GAAG,eAHA,GACdiD,EAAAA,WAUhC,OAFqCX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS","sources":["webpack://react-simple-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-simple-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__zt8Bt\",\"dialogsItems\":\"Dialogs_dialogsItems__fOeQz\",\"active\":\"Dialogs_active__O9AFy\",\"dialog\":\"Dialogs_dialog__01Isq\",\"messages\":\"Dialogs_messages__7IVGk\",\"dialogItemLink\":\"Dialogs_dialogItemLink__f1YJ0\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__mz4fK\",\"messageBg\":\"Message_messageBg__3ZxEL\"};","import s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n return (\r\n  <div className={s.message}>\r\n   <img src=\"https://papik.pro/uploads/posts/2021-09/1631997549_6-papik-pro-p-krutie-avatarki-risunki-6.jpg\" />\r\n   <div className={s.messageBg}>\r\n       {props.message}\r\n   </div>\r\n   </div>\r\n )\r\n}\r\n\r\nexport default Message;","import s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n let path = \"/dialogs/\" + props.id;\r\n\r\n return (\r\n  <div className={s.dialog + ' ' + s.active}>\r\n   <NavLink to={path} className={s.dialogItemLink}>\r\n    <img src='https://rus-pic.ru/wp-content/uploads/2021/12/avatarki-dlja-malchikov-41-foto-a4311f8.jpg' />\r\n    {props.name}\r\n    </NavLink>\r\n  </div>\r\n );  \r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Formik, Form, Field, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n  // if (!props.isAuth) return <Navigate to=\"/login\" />\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n          {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n          <div>{messagesElements}</div>\r\n          <AddMassageForm sendMessage={props.sendMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMassageForm = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      newTextMessage: \"\"\r\n    },\r\n    validationSchema: Yup.object({\r\n      newTextMessage: Yup.string()\r\n        .required(\"Required\")\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      addNewMessage(values);\r\n      console.log(values);\r\n      resetForm(values.newTextMessage = \"\")\r\n    }\r\n  })\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newTextMessage);\r\n  }\r\n\r\n  return (\r\n    <Formik >\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <div>\r\n          <Field name={'newTextMessage'} type={\"textarea\"} placeholder={'Enter text'}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.newTextMessage}\r\n          />\r\n        </div>\r\n        {\r\n          formik.touched.newTextMessage && formik.errors.newTextMessage\r\n            ? <button type={'submit'} disabled={true}>Send</button>\r\n            : <button type={'submit'} disabled={false}>Send</button>\r\n        }\r\n      </Form>\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newTextMessage) => {\r\n      dispatch(sendMessageCreator(newTextMessage));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect)\r\n  (Dialogs);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n class RedirectComponent extends React.Component {\r\n  render() {\r\n   if (!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n\r\n   return <Component {...this.props} />\r\n  }\r\n }\r\n\r\n let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n"],"names":["props","className","s","src","message","path","id","to","name","AddMassageForm","formik","useFormik","initialValues","newTextMessage","validationSchema","Yup","required","onSubmit","values","resetForm","addNewMessage","console","log","sendMessage","handleSubmit","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","disabled","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}